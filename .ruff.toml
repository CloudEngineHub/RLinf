# copy from https://docs.astral.sh/ruff/configuration/#__tabbed_1_2
# and changed some rules (commented by Customized)

# Exclude a variety of commonly ignored directories.
# Customized
exclude = [
    ".git",
    "megatron"
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
ignore = [
    "C901", # "complex-structure"
    "E501", # "line-too-long"
    "E741", # "ambiguous-variable-name"
    "D100", # "Missing docstring in public module"
    "D104", # "Missing docstring in public package"
    "D203", # "incorrect-blank-line-before-class", conflict with D211,
    "D213", # "multi-line-summary-second-line", conflict with D212
]
select = ["C", "E", "F", "I", "W", "RUF013", "UP006", "PERF102", "PLC1802", "PLC0208", "D", "RUF002"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[lint.per-file-ignores]
# Only enable docstring check for the scheduler module for now.
"!rlinf/scheduler/**.py" = ["D", "RUF002"]

[lint.pydocstyle]
convention = "google"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"